name: Rust CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test-native:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [
          ubuntu-latest,
          macos-latest,
          windows-latest
        ]
        include:
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
        - os: ubuntu-latest
          target: x86_64-unknown-linux-musl
        - os: macos-latest
          target: aarch64-apple-darwin
        - os: windows-latest
          target: x86_64-pc-windows-msvc
        - os: windows-latest
          target: i686-pc-windows-msvc
    steps:
    - uses: actions/checkout@v4
    - name: Build all features
      run: cargo build --verbose --all-features --target ${{ matrix.target }}
    - name: Run tests
      run: cargo test --verbose --target ${{ matrix.target }} -- --test-threads=1

  cross:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [
          i686-unknown-linux-gnu,
          aarch64-unknown-linux-gnu,
        ]
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: Set up cross
      run: cargo install cross
    - name: Build all features
      run: cross build --verbose --all-features --target ${{ matrix.target }}
    - name: Run tests
      run: cross test --verbose --target ${{ matrix.target }} -- --test-threads=1

  rustfmt:
    name: Rustfmt
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v4
    - name: Check code format
      run: cargo fmt --check
