name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test-native:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [
          ubuntu-latest,
        ]
    steps:
    - uses: actions/checkout@v4
    - name: Build all features
      run: cargo build --verbose --all-features
    - name: Run tests
      run: cargo test --verbose

  cross:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [
          i686-unknown-linux-gnu,
        ]
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: Set up cross
      run: cargo install cross
    - name: Build all features
      run: cross build --verbose --all-features --target ${{ matrix.target }}
    - name: Run tests
      run: cross test --verbose --target ${{ matrix.target }}

  rustfmt:
    name: Rustfmt
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v4
    - name: Check code format
      run: cargo fmt --check
